version: "3.9"

services:
  minio:
    image: minio/minio
    container_name: ${MINIO_CONTAINER_NAME}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --address ":9000" --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${MINIO_HOST}:${MINIO_DOCKER_INTERNAL_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  db:
    build: ./db
    image: postgres:13
    container_name: takip_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${DOCKER_POSTGRES_PORT}"

  backend:
    build: ./backend
    env_file:
      - .env
    container_name: takip_backend
    command:
      [
        "/wait.sh",
        "${POSTGRES_HOST}",
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "${DOCKER_BACKEND_PORT}",
      ]
    volumes:
      - ./backend/app:/app/app
    ports:
      - "${BACKEND_PORT}:${DOCKER_BACKEND_PORT}"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${DOCKER_POSTGRES_PORT}/${POSTGRES_DATABASE}
    depends_on:
      - db

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: ns_keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KEYCLOAK_DB_URL}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_AUTH_SERVER_URL: ${KEYCLOAK_AUTH_SERVER_URL}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      TZ: ${TZ}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    command: ["start-dev"]
    depends_on:
      - db

  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env
    container_name: takip_frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/src:/usr/src/app/src
    ports:
      - "${FRONTEND_PORT}:${DOCKER_FRONTEND_PORT}"
    depends_on:
      - backend

volumes:
  pgdata:
  minio_data:
